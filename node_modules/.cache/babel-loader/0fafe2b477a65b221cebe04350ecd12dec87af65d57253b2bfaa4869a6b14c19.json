{"ast":null,"code":"var _jsxFileName = \"/Users/charleshuynh/Desktop/create-tools-keyword-destiny/src/components/KeywordDensityTool.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KeywordDensityTool = () => {\n  _s();\n  const [text, setText] = useState('');\n  const [keywords, setKeywords] = useState([]);\n  const [results, setResults] = useState([]);\n  const handleTextChange = e => {\n    setText(e.target.value);\n  };\n  const handleKeywordsChange = e => {\n    // Chỉ trim khoảng trắng ở đầu và cuối mỗi từ khóa\n    setKeywords(e.target.value.split(',').map(kw => kw.trim()));\n  };\n  const calculateDensity = () => {\n    const totalWords = text.split(/\\s+/).filter(Boolean).length;\n    const keywordResults = keywords.map(keyword => {\n      const keywordCount = text.split(new RegExp(`\\\\b${keyword}\\\\b`, 'gi')).length - 1;\n      const keywordDensity = keywordCount / totalWords * 100;\n      let status = 'low';\n      let suggestion = '';\n      if (keywordDensity >= 2 && keywordDensity <= 3) {\n        status = 'good';\n        suggestion = `Mật độ từ khóa '${keyword}' đạt mức tốt.`;\n      } else if (keywordDensity > 3) {\n        status = 'high';\n        const wordsNeeded = Math.floor((keywordDensity - 3) / 100 * totalWords / keywordCount);\n        suggestion = `Mật độ từ khóa '${keyword}' quá cao. Hãy giảm bớt từ khóa này khoảng ${wordsNeeded} lần để tránh việc nhồi nhét.`;\n      } else {\n        const wordsNeeded = Math.ceil((2 - keywordDensity) / 100 * totalWords);\n        suggestion = `Mật độ từ khóa '${keyword}' quá thấp. Hãy thêm từ khóa này khoảng ${wordsNeeded} lần vào văn bản.`;\n      }\n      return {\n        keyword,\n        density: keywordDensity.toFixed(2),\n        status,\n        suggestion\n      };\n    });\n    setResults(keywordResults);\n  };\n  const data = {\n    labels: results.map(result => result.keyword),\n    datasets: [{\n      label: 'Density',\n      data: results.map(result => result.density),\n      backgroundColor: results.map(result => result.status === 'low' ? 'yellow' : result.status === 'good' ? 'green' : 'red')\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Keyword Density Tool\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Paste your text here...\",\n      rows: \"10\",\n      cols: \"80\",\n      value: text,\n      onChange: handleTextChange,\n      style: {\n        width: '100%',\n        marginBottom: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter keywords (comma-separated)...\",\n      value: keywords.join(', '),\n      onChange: handleKeywordsChange,\n      style: {\n        width: '100%',\n        marginBottom: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: calculateDensity,\n      style: {\n        marginBottom: '20px'\n      },\n      children: \"Calculate Density\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Keyword Density Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Suggestions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: results.map((result, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: result.suggestion\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(KeywordDensityTool, \"X+gbrUePHNYhrX0T66U26q8/zpk=\");\n_c = KeywordDensityTool;\nexport default KeywordDensityTool;\nvar _c;\n$RefreshReg$(_c, \"KeywordDensityTool\");","map":{"version":3,"names":["React","useState","Bar","jsxDEV","_jsxDEV","KeywordDensityTool","_s","text","setText","keywords","setKeywords","results","setResults","handleTextChange","e","target","value","handleKeywordsChange","split","map","kw","trim","calculateDensity","totalWords","filter","Boolean","length","keywordResults","keyword","keywordCount","RegExp","keywordDensity","status","suggestion","wordsNeeded","Math","floor","ceil","density","toFixed","data","labels","result","datasets","label","backgroundColor","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","rows","cols","onChange","width","marginBottom","type","join","onClick","index","_c","$RefreshReg$"],"sources":["/Users/charleshuynh/Desktop/create-tools-keyword-destiny/src/components/KeywordDensityTool.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { Bar } from 'react-chartjs-2'\nimport 'chart.js/auto'\n\nconst KeywordDensityTool = () => {\n  const [text, setText] = useState('')\n  const [keywords, setKeywords] = useState([])\n  const [results, setResults] = useState([])\n\n  const handleTextChange = (e) => {\n    setText(e.target.value)\n  }\n\n  const handleKeywordsChange = (e) => {\n    // Chỉ trim khoảng trắng ở đầu và cuối mỗi từ khóa\n    setKeywords(e.target.value.split(',').map((kw) => kw.trim()))\n  }\n\n  const calculateDensity = () => {\n    const totalWords = text.split(/\\s+/).filter(Boolean).length\n    const keywordResults = keywords.map((keyword) => {\n      const keywordCount = text.split(new RegExp(`\\\\b${keyword}\\\\b`, 'gi')).length - 1\n      const keywordDensity = (keywordCount / totalWords) * 100\n      let status = 'low'\n      let suggestion = ''\n\n      if (keywordDensity >= 2 && keywordDensity <= 3) {\n        status = 'good'\n        suggestion = `Mật độ từ khóa '${keyword}' đạt mức tốt.`\n      } else if (keywordDensity > 3) {\n        status = 'high'\n        const wordsNeeded = Math.floor((((keywordDensity - 3) / 100) * totalWords) / keywordCount)\n        suggestion = `Mật độ từ khóa '${keyword}' quá cao. Hãy giảm bớt từ khóa này khoảng ${wordsNeeded} lần để tránh việc nhồi nhét.`\n      } else {\n        const wordsNeeded = Math.ceil(((2 - keywordDensity) / 100) * totalWords)\n        suggestion = `Mật độ từ khóa '${keyword}' quá thấp. Hãy thêm từ khóa này khoảng ${wordsNeeded} lần vào văn bản.`\n      }\n\n      return { keyword, density: keywordDensity.toFixed(2), status, suggestion }\n    })\n    setResults(keywordResults)\n  }\n\n  const data = {\n    labels: results.map((result) => result.keyword),\n    datasets: [\n      {\n        label: 'Density',\n        data: results.map((result) => result.density),\n        backgroundColor: results.map((result) => (result.status === 'low' ? 'yellow' : result.status === 'good' ? 'green' : 'red')),\n      },\n    ],\n  }\n\n  return (\n    <div style={{ padding: '20px' }}>\n      <h1>Keyword Density Tool</h1>\n      <textarea\n        placeholder='Paste your text here...'\n        rows='10'\n        cols='80'\n        value={text}\n        onChange={handleTextChange}\n        style={{ width: '100%', marginBottom: '10px' }}\n      />\n      <input\n        type='text'\n        placeholder='Enter keywords (comma-separated)...'\n        value={keywords.join(', ')}\n        onChange={handleKeywordsChange}\n        style={{ width: '100%', marginBottom: '10px' }}\n      />\n      <button onClick={calculateDensity} style={{ marginBottom: '20px' }}>\n        Calculate Density\n      </button>\n      <h2>Keyword Density Results</h2>\n      <Bar data={data} />\n      <h3>Suggestions</h3>\n      <div>\n        {results.map((result, index) => (\n          <p key={index}>{result.suggestion}</p>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default KeywordDensityTool\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,GAAG,QAAQ,iBAAiB;AACrC,OAAO,eAAe;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMY,gBAAgB,GAAIC,CAAC,IAAK;IAC9BN,OAAO,CAACM,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACzB,CAAC;EAED,MAAMC,oBAAoB,GAAIH,CAAC,IAAK;IAClC;IACAJ,WAAW,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAACE,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAEC,EAAE,IAAKA,EAAE,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;EAC/D,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,MAAMC,UAAU,GAAGhB,IAAI,CAACW,KAAK,CAAC,KAAK,CAAC,CAACM,MAAM,CAACC,OAAO,CAAC,CAACC,MAAM;IAC3D,MAAMC,cAAc,GAAGlB,QAAQ,CAACU,GAAG,CAAES,OAAO,IAAK;MAC/C,MAAMC,YAAY,GAAGtB,IAAI,CAACW,KAAK,CAAC,IAAIY,MAAM,CAAC,MAAMF,OAAO,KAAK,EAAE,IAAI,CAAC,CAAC,CAACF,MAAM,GAAG,CAAC;MAChF,MAAMK,cAAc,GAAIF,YAAY,GAAGN,UAAU,GAAI,GAAG;MACxD,IAAIS,MAAM,GAAG,KAAK;MAClB,IAAIC,UAAU,GAAG,EAAE;MAEnB,IAAIF,cAAc,IAAI,CAAC,IAAIA,cAAc,IAAI,CAAC,EAAE;QAC9CC,MAAM,GAAG,MAAM;QACfC,UAAU,GAAG,mBAAmBL,OAAO,gBAAgB;MACzD,CAAC,MAAM,IAAIG,cAAc,GAAG,CAAC,EAAE;QAC7BC,MAAM,GAAG,MAAM;QACf,MAAME,WAAW,GAAGC,IAAI,CAACC,KAAK,CAAG,CAACL,cAAc,GAAG,CAAC,IAAI,GAAG,GAAIR,UAAU,GAAIM,YAAY,CAAC;QAC1FI,UAAU,GAAG,mBAAmBL,OAAO,8CAA8CM,WAAW,+BAA+B;MACjI,CAAC,MAAM;QACL,MAAMA,WAAW,GAAGC,IAAI,CAACE,IAAI,CAAE,CAAC,CAAC,GAAGN,cAAc,IAAI,GAAG,GAAIR,UAAU,CAAC;QACxEU,UAAU,GAAG,mBAAmBL,OAAO,2CAA2CM,WAAW,mBAAmB;MAClH;MAEA,OAAO;QAAEN,OAAO;QAAEU,OAAO,EAAEP,cAAc,CAACQ,OAAO,CAAC,CAAC,CAAC;QAAEP,MAAM;QAAEC;MAAW,CAAC;IAC5E,CAAC,CAAC;IACFrB,UAAU,CAACe,cAAc,CAAC;EAC5B,CAAC;EAED,MAAMa,IAAI,GAAG;IACXC,MAAM,EAAE9B,OAAO,CAACQ,GAAG,CAAEuB,MAAM,IAAKA,MAAM,CAACd,OAAO,CAAC;IAC/Ce,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,SAAS;MAChBJ,IAAI,EAAE7B,OAAO,CAACQ,GAAG,CAAEuB,MAAM,IAAKA,MAAM,CAACJ,OAAO,CAAC;MAC7CO,eAAe,EAAElC,OAAO,CAACQ,GAAG,CAAEuB,MAAM,IAAMA,MAAM,CAACV,MAAM,KAAK,KAAK,GAAG,QAAQ,GAAGU,MAAM,CAACV,MAAM,KAAK,MAAM,GAAG,OAAO,GAAG,KAAM;IAC5H,CAAC;EAEL,CAAC;EAED,oBACE5B,OAAA;IAAK0C,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC9B5C,OAAA;MAAA4C,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7BhD,OAAA;MACEiD,WAAW,EAAC,yBAAyB;MACrCC,IAAI,EAAC,IAAI;MACTC,IAAI,EAAC,IAAI;MACTvC,KAAK,EAAET,IAAK;MACZiD,QAAQ,EAAE3C,gBAAiB;MAC3BiC,KAAK,EAAE;QAAEW,KAAK,EAAE,MAAM;QAAEC,YAAY,EAAE;MAAO;IAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eACFhD,OAAA;MACEuD,IAAI,EAAC,MAAM;MACXN,WAAW,EAAC,qCAAqC;MACjDrC,KAAK,EAAEP,QAAQ,CAACmD,IAAI,CAAC,IAAI,CAAE;MAC3BJ,QAAQ,EAAEvC,oBAAqB;MAC/B6B,KAAK,EAAE;QAAEW,KAAK,EAAE,MAAM;QAAEC,YAAY,EAAE;MAAO;IAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eACFhD,OAAA;MAAQyD,OAAO,EAAEvC,gBAAiB;MAACwB,KAAK,EAAE;QAAEY,YAAY,EAAE;MAAO,CAAE;MAAAV,QAAA,EAAC;IAEpE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACThD,OAAA;MAAA4C,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChChD,OAAA,CAACF,GAAG;MAACsC,IAAI,EAAEA;IAAK;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnBhD,OAAA;MAAA4C,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBhD,OAAA;MAAA4C,QAAA,EACGrC,OAAO,CAACQ,GAAG,CAAC,CAACuB,MAAM,EAAEoB,KAAK,kBACzB1D,OAAA;QAAA4C,QAAA,EAAgBN,MAAM,CAACT;MAAU,GAAzB6B,KAAK;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAwB,CACtC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAA9C,EAAA,CAjFKD,kBAAkB;AAAA0D,EAAA,GAAlB1D,kBAAkB;AAmFxB,eAAeA,kBAAkB;AAAA,IAAA0D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}